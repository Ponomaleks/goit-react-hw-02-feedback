{"version":3,"sources":["components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/Button/Button.jsx","FeedbackOptions/FeedbackOptions.jsx","App.js","index.js"],"names":["Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","Button","text","type","onClick","name","toUpperCase","slice","FeedbackOptions","options","onLeaveFeedback","map","opt","App","state","handleClick","e","target","setState","prevState","countTotalFeedback","Object","values","reduce","a","b","countPositiveFeedbackPercentage","Math","round","TotalFeedback","this","PositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAAe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,6BAAKD,IACJC,KCOQC,MAXf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,sDAAyBC,EAAzB,YCPS,SAASC,EAAT,GAA0C,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC3C,OACE,wBAAQD,KAAMA,EAAME,KAAMH,EAAME,QAASA,EAAzC,SACGF,EAAK,GAAGI,cAAgBJ,EAAKK,MAAM,KCD3B,SAASC,EAAT,GAA8D,IAAnCC,EAAkC,EAAlCA,QAASN,EAAyB,EAAzBA,KAAMO,EAAmB,EAAnBA,gBACvD,OACE,8BACGD,EAAQE,KAAI,SAAAC,GACX,OAAO,cAACX,EAAD,CAAQC,KAAMU,EAAKT,KAAMA,EAAgBC,QAASM,GAAdE,Q,ICC7CC,E,4MACJC,MAAQ,CAAElB,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCiB,YAAc,SAAAC,GACZ,IAAMX,EAAOW,EAAEC,OAAOZ,KACtB,EAAKa,UAAS,SAAAC,GAAS,sBAAQd,EAAOc,EAAUd,GAAQ,O,EAG1De,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,I,EAG3DC,gCAAkC,WAChC,OAAO,EAAKN,qBACRO,KAAKC,MAAO,EAAKd,MAAMlB,KAAO,EAAKwB,qBAAwB,KAC3D,G,4CAGN,WAAU,IAAD,EACDS,EAAgBC,KAAKV,qBACrBW,EAA6BD,KAAKJ,kCACxC,OACE,qCACE,cAAClC,EAAD,CAASC,MAAM,uBAAf,SACE,cAACe,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BN,KAAK,SACLO,gBAAiBoB,KAAKf,gBAGzBe,KAAKV,qBACJ,cAAC5B,EAAD,CAASC,MAAM,aAAf,SACE,cAAC,GAAD,GACEG,KAAMkC,KAAKhB,MAAMlB,KACjBC,QAASiC,KAAKhB,MAAMjB,QACpBC,IAAKgC,KAAKhB,MAAMhB,IAChBC,MAAO,EACPC,mBAAoB,GALtB,sBAMS6B,GANT,mCAOsBE,GAPtB,MAWF,0D,GA3CQC,aAkDHnB,ICpDfoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.61e812f5.chunk.js","sourcesContent":["export default function Section({ title, children }) {\n  return (\n    <section>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n}\n","function Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive percentage: {positivePercentage} %</p>\n    </>\n  );\n}\nexport default Statistics;\n","export default function Button({ text, type, onClick }) {\n  return (\n    <button type={type} name={text} onClick={onClick}>\n      {text[0].toUpperCase() + text.slice(1)}\n    </button>\n  );\n}\n","import Button from '../components/Button';\n\nexport default function FeedbackOptions({ options, type, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map(opt => {\n        return <Button text={opt} type={type} key={opt} onClick={onLeaveFeedback} />;\n      })}\n    </div>\n  );\n}\n","import './App.css';\nimport Section from './components/Section';\n// import Button from './components/Button';\nimport Statistics from './components/Statistics';\nimport { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  handleClick = e => {\n    const name = e.target.name;\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((a, b) => a + b, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return this.countTotalFeedback()\n      ? Math.round((this.state.good / this.countTotalFeedback()) * 100)\n      : 0;\n  };\n\n  render() {\n    const TotalFeedback = this.countTotalFeedback();\n    const PositiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <>\n        <Section title=\"Pease leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            type=\"button\"\n            onLeaveFeedback={this.handleClick}\n          />\n        </Section>\n        {this.countTotalFeedback() ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={0}\n              positivePercentage={0}\n              total={TotalFeedback}\n              positivePercentage={PositiveFeedbackPercentage}\n            />\n          </Section>\n        ) : (\n          <p>Not feedback given</p>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}